alias gp="git pull --rebase"
alias ts="tig status"
alias gs="git stash"
alias gc='git checkout'
alias 'git-update-master'='git pull origin master'
alias 'git-update-develop'='git pull origin develop'
alias 'git-current-branch'='git rev-parse --abbrev-ref HEAD'
alias 'git-delete-reomte-branch'='git push origin --delete $1'
alias 'git-delete-unexist-barnch'='git fetch --prune'
alias 'git-undo-commit'='git reset HEAD~1'
alias 'git-copy-commit'='git cherry-pick'
alias 'git-delete-merged-branches'='git branch --merged | grep -v "\*" | grep -v "master"| grep -v "develop" | xargs -n 1 git branch -d'
alias 'git-delete-branches-merged-into-current'='git branch --merged | grep -v "\*" | grep -v master | xargs -n 1 git branch -d'
alias 'git-cancel-commit'='git reset --hard HEAD^' # 取消当前版本之前的两次提交
alias 'git-push-force'='git push origin HEAD --force' # 强制提交到远程版本库，从而删除之前的两次提交数据

# usage example:
# $ git-new-branch "56856748 daily statistics for count of leads for each sales_person"
# Switched to a new branch '56856748-daily-statistics-for-count-of-leads-for-each-sales_person'
function git-new-branch {
  # git checkout develop
  String.parameterize "$1" > __tmp__
  cat __tmp__ |xargs -L1 git checkout -b
  rm __tmp__
}

function git-push-current-branch-to-remote {
  branch_name=`git-current-branch`
  git push origin $branch_name
  git branch --set-upstream-to=origin/$branch_name $branch_name
}

function String.parameterize (){
  ruby -e "require 'active_support/core_ext/string'; puts '$1'.parameterize;" 
}

function git-new-branch {
  git checkout develop
  String.parameterize "$1" > __tmp__ 
  cat __tmp__ | xargs -L1 git checkout -b 
  rm __tmp__ 
}

function git-patch { 
  git format-patch -1 $1
}

function git-apply { 
  git apply --check $1
}


function progress { 
  ps -ef | grep $1
}
